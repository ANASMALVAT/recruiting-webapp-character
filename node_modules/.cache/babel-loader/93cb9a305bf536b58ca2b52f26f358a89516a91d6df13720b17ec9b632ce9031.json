{"ast":null,"code":"// attributeSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { ATTRIBUTE_LIST } from \"../../consts\";\n\n// Check if ATTRIBUTE_LIST is defined and is an array\nconst initialAttributes = Array.isArray(ATTRIBUTE_LIST) ? ATTRIBUTE_LIST.map(attr => ({\n  name: attr,\n  value: 0\n})) : [];\nexport const attributeSlice = createSlice({\n  name: 'attribute',\n  initialState: initialAttributes,\n  reducers: {\n    incrementAttribute: (state, action) => {\n      const attribute = state.find(attr => attr.name === action.payload.name);\n      if (attribute) {\n        attribute.value += 1;\n      }\n    },\n    decrementAttribute: (state, action) => {\n      const attribute = state.find(attr => attr.name === action.payload.name);\n      if (attribute && attribute.value > 0) {\n        attribute.value -= 1;\n      }\n    },\n    setAttributes: (state, action) => {\n      return action.payload; // Replace state with new attributes\n    }\n  }\n});\nexport const {\n  incrementAttribute,\n  decrementAttribute,\n  setAttributes\n} = attributeSlice.actions;\nexport default attributeSlice.reducer;","map":{"version":3,"names":["createSlice","ATTRIBUTE_LIST","initialAttributes","Array","isArray","map","attr","name","value","attributeSlice","initialState","reducers","incrementAttribute","state","action","attribute","find","payload","decrementAttribute","setAttributes","actions","reducer"],"sources":["/Users/anutiger/Desktop/policyMe-coding-exercise/Personal-Website/recruiting-webapp-character/coding-exercise-policyme/src/redux/slice/attributeSlice.js"],"sourcesContent":["// attributeSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { ATTRIBUTE_LIST } from \"../../consts\";\n\n// Check if ATTRIBUTE_LIST is defined and is an array\nconst initialAttributes = Array.isArray(ATTRIBUTE_LIST) \n  ? ATTRIBUTE_LIST.map(attr => ({ name: attr, value: 0 })) \n  : []; \n\nexport const attributeSlice = createSlice({\n  name: 'attribute',\n  initialState: initialAttributes, \n  reducers: {\n    incrementAttribute: (state, action) => {\n      const attribute = state.find(attr => attr.name === action.payload.name);\n      if (attribute) {\n        attribute.value += 1;\n      }\n    },\n    decrementAttribute: (state, action) => {\n      const attribute = state.find(attr => attr.name === action.payload.name);\n      if (attribute && attribute.value > 0) {\n        attribute.value -= 1;\n      }\n    },\n    setAttributes: (state, action) => {\n      return action.payload; // Replace state with new attributes\n    }\n  },\n});\n\nexport const { incrementAttribute, decrementAttribute, setAttributes } = attributeSlice.actions;\n\nexport default attributeSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,cAAc;;AAE7C;AACA,MAAMC,iBAAiB,GAAGC,KAAK,CAACC,OAAO,CAACH,cAAc,CAAC,GACnDA,cAAc,CAACI,GAAG,CAACC,IAAI,KAAK;EAAEC,IAAI,EAAED,IAAI;EAAEE,KAAK,EAAE;AAAE,CAAC,CAAC,CAAC,GACtD,EAAE;AAEN,OAAO,MAAMC,cAAc,GAAGT,WAAW,CAAC;EACxCO,IAAI,EAAE,WAAW;EACjBG,YAAY,EAAER,iBAAiB;EAC/BS,QAAQ,EAAE;IACRC,kBAAkB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrC,MAAMC,SAAS,GAAGF,KAAK,CAACG,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKO,MAAM,CAACG,OAAO,CAACV,IAAI,CAAC;MACvE,IAAIQ,SAAS,EAAE;QACbA,SAAS,CAACP,KAAK,IAAI,CAAC;MACtB;IACF,CAAC;IACDU,kBAAkB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACrC,MAAMC,SAAS,GAAGF,KAAK,CAACG,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKO,MAAM,CAACG,OAAO,CAACV,IAAI,CAAC;MACvE,IAAIQ,SAAS,IAAIA,SAAS,CAACP,KAAK,GAAG,CAAC,EAAE;QACpCO,SAAS,CAACP,KAAK,IAAI,CAAC;MACtB;IACF,CAAC;IACDW,aAAa,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAChC,OAAOA,MAAM,CAACG,OAAO,CAAC,CAAC;IACzB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,kBAAkB;EAAEM,kBAAkB;EAAEC;AAAc,CAAC,GAAGV,cAAc,CAACW,OAAO;AAE/F,eAAeX,cAAc,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}