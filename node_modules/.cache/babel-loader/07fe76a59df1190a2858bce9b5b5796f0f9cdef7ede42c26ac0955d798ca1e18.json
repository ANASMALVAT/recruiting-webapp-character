{"ast":null,"code":"var _jsxFileName = \"/Users/anutiger/Desktop/policyMe-coding-exercise/Personal-Website/recruiting-webapp-character/coding-exercise-policyme/src/components/class.js\",\n  _s = $RefreshSig$();\n// ClassList.js\nimport React, { useState } from 'react';\nimport { CLASS_LIST } from \"../consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Class = ({\n  attributes\n}) => {\n  _s();\n  const [selectedClass, setSelectedClass] = useState(null);\n\n  // Function to check if the character meets the requirements for a class\n  const meetsRequirements = classRequirements => {\n    return Object.keys(classRequirements).every(attr => {\n      var _attributes$find;\n      const attrValue = ((_attributes$find = attributes.find(a => a.name === attr)) === null || _attributes$find === void 0 ? void 0 : _attributes$find.value) || 0;\n      return attrValue >= classRequirements[attr];\n    });\n  };\n\n  // Handle class selection\n  const handleClassClick = className => {\n    setSelectedClass(className === selectedClass ? null : className);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: \"Class List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 space-y-2\",\n      children: Object.entries(CLASS_LIST).map(([className, requirements]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 border rounded-lg cursor-pointer ${meetsRequirements(requirements) ? 'bg-green-100' : 'bg-gray-100'}`,\n        onClick: () => handleClassClick(className) // Handle click event\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: className\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Requirements:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(requirements).map(([attr, min]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [attr, \": \", min]\n            }, attr, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), selectedClass === className && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Minimum Required Statistics for \", className, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(requirements).map(([attr, min]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [attr, \": \", min]\n            }, attr, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, className, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Class, \"q640sDw8TaB3Vt2AO0jY3D3Av2w=\");\n_c = Class;\nexport default Class;\nvar _c;\n$RefreshReg$(_c, \"Class\");","map":{"version":3,"names":["React","useState","CLASS_LIST","jsxDEV","_jsxDEV","Class","attributes","_s","selectedClass","setSelectedClass","meetsRequirements","classRequirements","Object","keys","every","attr","_attributes$find","attrValue","find","a","name","value","handleClassClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","requirements","onClick","min","_c","$RefreshReg$"],"sources":["/Users/anutiger/Desktop/policyMe-coding-exercise/Personal-Website/recruiting-webapp-character/coding-exercise-policyme/src/components/class.js"],"sourcesContent":["// ClassList.js\nimport React, { useState } from 'react';\nimport { CLASS_LIST } from \"../consts\";\n\nconst Class = ({ attributes }) => {\n  const [selectedClass, setSelectedClass] = useState(null);\n\n  // Function to check if the character meets the requirements for a class\n  const meetsRequirements = (classRequirements) => {\n    return Object.keys(classRequirements).every(attr => {\n      const attrValue = attributes.find(a => a.name === attr)?.value || 0;\n      return attrValue >= classRequirements[attr];\n    });\n  };\n\n  // Handle class selection\n  const handleClassClick = (className) => {\n    setSelectedClass(className === selectedClass ? null : className);\n  };\n\n  return (\n    <div className=\"mt-6\">\n      <h2 className=\"text-xl font-bold\">Class List</h2>\n      <div className=\"mt-2 space-y-2\">\n        {Object.entries(CLASS_LIST).map(([className, requirements]) => (\n          <div\n            key={className}\n            className={`p-4 border rounded-lg cursor-pointer ${\n              meetsRequirements(requirements) ? 'bg-green-100' : 'bg-gray-100'\n            }`}\n            onClick={() => handleClassClick(className)} // Handle click event\n          >\n            <h3 className=\"font-semibold\">{className}</h3>\n            <div>\n              <strong>Requirements:</strong>\n              <ul>\n                {Object.entries(requirements).map(([attr, min]) => (\n                  <li key={attr}>\n                    {attr}: {min}\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            {/* Conditionally render class details */}\n            {selectedClass === className && (\n              <div className=\"mt-2 text-gray-700\">\n                <strong>Minimum Required Statistics for {className}:</strong>\n                <ul>\n                  {Object.entries(requirements).map(([attr, min]) => (\n                    <li key={attr}>\n                      {attr}: {min}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Class;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}